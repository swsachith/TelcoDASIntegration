 create temporary table auth_endpoint using CarbonAnalytics options (tableName "COM_WSO2_TELCO_AUTHORIZATION_ENDPOINT", schema "_timestamp LONG -i",  incrementalParams "auth_endpoint, 2678400");

 create temporary table daily_registrations_per_app_summary using CarbonAnalytics options (tableName "COM_WSO2_TELCO_DAILY_REGISTRATIONS_PER_APP_SUMMARY", schema "day STRING -i, operator STRING -i, appID STRING -i, regCount LONG -i, _timestamp LONG -i", primaryKeys "day, operator, appID");

 create temporary table daily_registrations_per_operator_summary using CarbonAnalytics options (tableName "COM_WSO2_TELCO_DAILY_REGISTRATIONS_PER_OPERATOR_SUMMARY", schema "day STRING -i, operator STRING -i, regCount LONG -i, aggregateCount LONG -i, _timestamp LONG -i", primaryKeys "day, operator"); 

 create temporary table daily_registrations_per_operator_summary_temp using CarbonAnalytics options (tableName "COM_WSO2_TELCO_DAILY_REGISTRATIONS_PER_OPERATOR_SUMMARY", schema "day STRING -i, operator STRING -i, regCount LONG -i, aggregateCount LONG -i, _timestamp LONG -i", primaryKeys "day, operator"); 
  
 INSERT INTO TABLE daily_registrations_per_app_summary SELECT getDateString(dayTimestamp) as day, operator, appID, count(*), dayTimestamp as _timestamp FROM (SELECT getDateTimestamp(_timestamp) as dayTimestamp, operator, appID FROM auth_endpoint WHERE isNewUser=true) tempTable GROUP BY dayTimestamp, operator, appID;

 INSERT INTO TABLE daily_registrations_per_operator_summary SELECT getDateString(dayTimestamp) as day, operator, appID, count(regCount), dayTimestamp as _timestamp FROM (SELECT getDateTimestamp(_timestamp) as dayTimestamp, operator, appID FROM auth_endpoint WHERE isNewUser=true) tempTable GROUP BY dayTimestamp, operator, appID;

 INCREMENTAL_TABLE_COMMIT auth_endpoint;