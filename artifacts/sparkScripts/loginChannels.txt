 create temporary table user_status_loginChannels using CarbonAnalytics options (tableName "COM_WSO2_TELCO_USERSTATUS", schema "_timestamp LONG -i",  incrementalParams "user_status_loginChannels, 86400");

  create temporary table loginChannels_temp using CarbonAnalytics options (tableName "COM_WSO2_TELCO_TEMP_USERSTATUS", schema "sessionID STRING -i, status STRING -i, sourceIP STRING -i,_timestamp LONG -i",  incrementalParams "loginChannels_temp, 86400", primaryKeys "sessionID");

  INSERT INTO TABLE loginChannels_temp
  select * from user_status_loginChannels

create temporary table auth_endpoint_loginChannels using CarbonAnalytics options (tableName "COM_WSO2_TELCO_AUTHORIZATION_ENDPOINT", schema "_timestamp LONG -i",  incrementalParams "auth_endpoint_loginChannels, 86400");

create temporary table loginChannels_final using CarbonAnalytics options (tableName "COM_WSO2_TELCO_LOGIN_CHANNELS", schema "day STRING -i, operator STRING -i, appID STRING -i, status STRING -i, total_count LONG -i,_timestamp LONG -i", primaryKeys "day, operator, appID, status");

INSERT INTO TABLE loginChannels_final
SELECT getDateString(dayTimestamp) as day, operator, appID, status, count(*), dayTimestamp
FROM
(select getDateTimestamp(lct._timestamp) as dayTimestamp, operator, appID, status
from loginChannels_temp as lct join auth_endpoint_loginChannels as ael
on lct.sessionID = ael.sessionID) tempTable 
GROUP BY dayTimestamp, operator, appID, status;
